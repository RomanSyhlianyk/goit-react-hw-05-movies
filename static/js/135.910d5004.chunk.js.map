{"version":3,"file":"static/js/135.910d5004.chunk.js","mappings":"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","sources":["api/api.js","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab77f0c04f8ab9ce7b6392ae1e254264';\n\nexport const getTrendingMovies = async () => {\n  return axios.get('trending/movie/day', {\n    params: {\n      api_key: API_KEY, \n    },\n  });\n};\n\nexport const getMovieByName = async (query) => {\n  return axios.get('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n      \n    },\n  });\n};\n\nexport const getMovieById = (id) => {\n  return axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n}\n\nexport const getCast = id => {\n  return axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getReviews = id => {\n  return axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};","export const Loader = () => {\n  return (\n    <div className=\" fixed top-0 left-0 z-20 flex h-full w-full items-center justify-center bg-gray-900 bg-opacity-90\">\n      <div className=\"flex flex-col items-center justify-center gap-4 text-slate-50\">\n        <h2 className=\"text-4xl font-bold\">Loading</h2>\n        <svg\n          fill=\"none\"\n          className=\"h-14 w-14 animate-spin\"\n          viewBox=\"0 0 32 32\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            clipRule=\"evenodd\"\n            d=\"M15.165 8.53a.5.5 0 01-.404.58A7 7 0 1023 16a.5.5 0 011 0 8 8 0 11-9.416-7.874.5.5 0 01.58.404z\"\n            fill=\"currentColor\"\n            fillRule=\"evenodd\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"BackButton\":\"MovieDetails_BackButton__on4hH\",\"Box\":\"MovieDetails_Box__AXGFq\",\"Img\":\"MovieDetails_Img__BiNph\",\"Link\":\"MovieDetails_Link__HT1W6\"};","import { getMovieById } from 'api/api';\nimport { useState, useEffect, Suspense } from 'react';\nimport { routes } from '../../routes/routes';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { state } = useLocation();\n  const { movieId } = useParams(null);\n  const [movie, setMovie] = useState({});\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const backPath = state?.from ? state.from.pathname : '/';\n  const ref = useRef(backPath);\n\n  useEffect(() => {\n    const fetchMoviesById = async () => {\n      try {\n        setIsLoading(true);\n        const dataMovie = await getMovieById(movieId);\n        setMovie(dataMovie.data);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMoviesById();\n  }, [movieId]);\n\n  if (isError) return <p>Error</p>;\n  if (isLoading) return <Loader />;\n  return (\n    <section className={css.Section}>\n      <Link className={css.BackButton} to={ref?.current}>\n        Back\n      </Link>\n      <div className={css.Box}>\n        {movie.poster_path && (\n          <img\n            className={css.Img}\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt=\"\"\n            width=\"300\"\n          />\n        )}\n        <div>\n          <h2>{movie.title}</h2>\n          <p>User score: {movie.vote_average}</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          {movie?.genres && (\n            <ul>\n              {movie.genres.map(({ id, name }) => {\n                return <li key={id}>{name}</li>;\n              })}\n            </ul>\n          )}\n        </div>\n      </div>\n      <ul>\n        <li>\n          <Link className={css.Link} to={routes.CAST}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link className={css.Link} to={routes.REVIEWS}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","getTrendingMovies","params","api_key","getMovieByName","query","getMovieById","id","getCast","getReviews","Loader","className","fill","viewBox","xmlns","clipRule","d","fillRule","state","useLocation","movieId","useParams","useState","movie","setMovie","isError","setIsError","isLoading","setIsLoading","backPath","from","pathname","ref","useRef","useEffect","fetchMoviesById","dataMovie","data","css","to","current","poster_path","src","alt","width","title","vote_average","overview","genres","map","name","routes","Suspense","fallback"],"sourceRoot":""}