{"version":3,"file":"static/js/871.880e918e.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,uGACxBF,EAAAA,EAAAA,IAAU,qBAAsB,CACrCG,OAAQ,CACNC,QAASH,MAHkB,2CAAH,qDAQjBI,EAAc,mCAAG,WAAOC,GAAP,0FACrBN,EAAAA,EAAAA,IAAU,eAAgB,CAC/BG,OAAQ,CACNC,QAASH,EACTK,MAAAA,MAJwB,2CAAH,sDAUdC,EAAe,SAACC,GAC3B,OAAOR,EAAAA,EAAAA,IAAA,gBAAmBQ,GAAM,CAC9BL,OAAQ,CACNC,QAASH,IAGd,EAEYQ,EAAU,SAAAD,GACrB,OAAOR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,YAAiC,CACtCL,OAAQ,CACNC,QAASH,IAGd,EAEYS,EAAa,SAAAF,GACxB,OAAOR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,YAAiC,CACtCL,OAAQ,CACNC,QAASH,IAGd,C,mEC7CYU,EAAS,WACpB,OACE,gBAAKC,UAAU,oGAAf,UACE,iBAAKA,UAAU,gEAAf,WACE,eAAIA,UAAU,qBAAd,sBACA,gBACEC,KAAK,OACLD,UAAU,yBACVE,QAAQ,YACRC,MAAM,6BAJR,UAME,iBACEC,SAAS,UACTC,EAAE,kGACFJ,KAAK,eACLK,SAAS,kBAMpB,C,kHCyBD,UAzCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,IAAU,MAAtBD,QACR,GAA2BE,EAAAA,EAAAA,UAAS,CAAC,GAArC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBF,GAAa,GAFI,UAGSjB,EAAAA,EAAAA,IAAWS,GAHpB,OAGXW,EAHW,OAIjBP,EAAQO,EAAYC,KAAKC,SAJR,gDAMjBP,GAAW,GANM,yBAQjBE,GAAa,GARI,4EAAH,qDAWlBE,GACD,GAAE,CAACV,IAEAK,GAAgB,iCAChBE,GAAkB,SAAC,IAAD,KAGpB,0BACE,wBACGJ,EAAQW,OAAS,GAChBX,EAAQY,KAAI,YAA8B,IAA3B1B,EAA0B,EAA1BA,GAAI2B,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFG5B,EAKZ,OAIV,C","sources":["api/api.js","components/Loader/Loader.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab77f0c04f8ab9ce7b6392ae1e254264';\n\nexport const getTrendingMovies = async () => {\n  return axios.get('trending/movie/day', {\n    params: {\n      api_key: API_KEY, \n    },\n  });\n};\n\nexport const getMovieByName = async (query) => {\n  return axios.get('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n      \n    },\n  });\n};\n\nexport const getMovieById = (id) => {\n  return axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n}\n\nexport const getCast = id => {\n  return axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getReviews = id => {\n  return axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};","export const Loader = () => {\n  return (\n    <div className=\" fixed top-0 left-0 z-20 flex h-full w-full items-center justify-center bg-gray-900 bg-opacity-90\">\n      <div className=\"flex flex-col items-center justify-center gap-4 text-slate-50\">\n        <h2 className=\"text-4xl font-bold\">Loading</h2>\n        <svg\n          fill=\"none\"\n          className=\"h-14 w-14 animate-spin\"\n          viewBox=\"0 0 32 32\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            clipRule=\"evenodd\"\n            d=\"M15.165 8.53a.5.5 0 01-.404.58A7 7 0 1023 16a.5.5 0 011 0 8 8 0 11-9.416-7.874.5.5 0 01.58.404z\"\n            fill=\"currentColor\"\n            fillRule=\"evenodd\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n","import { getReviews } from 'api/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams(null);\n  const [reviews, setCast] = useState({});\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setIsLoading(true);\n        const dataReviews = await getReviews(movieId);\n        setCast(dataReviews.data.results);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  if (isError) return <p>Error</p>;\n  if (isLoading) return <Loader />;\n\n  return (\n    <div>\n      <ul>\n        {reviews.length > 0 &&\n          reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","getTrendingMovies","params","api_key","getMovieByName","query","getMovieById","id","getCast","getReviews","Loader","className","fill","viewBox","xmlns","clipRule","d","fillRule","movieId","useParams","useState","reviews","setCast","isError","setIsError","isLoading","setIsLoading","useEffect","fetchReviews","dataReviews","data","results","length","map","author","content"],"sourceRoot":""}